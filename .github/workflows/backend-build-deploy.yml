name: CI/CD for Backend

on:
  push:
    branches: [ "main", "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_SERVER: ${{ secrets.DB_SERVER }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        DB_ENCRYPT: ${{ secrets.DB_ENCRYPT }}
        ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: npm ci

    - name: Create deployment package
      run: |
        rm -f backend.zip
        zip -r backend.zip * .[^.]* -x "node_modules/*" ".env" "tests/*"
      
    - name: Deploy to Azure
      run: |
        curl -X POST "https://zjulen.scm.azurewebsites.net/api/zipdeploy" \
        --user "${{ secrets.AZURE_DEPLOYMENT_USER }}:${{ secrets.AZURE_DEPLOYMENT_PASSWORD }}" \
        --data-binary @"backend.zip"
      env:
        DB_SERVER: ${{ secrets.DB_SERVER }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_ENCRYPT: ${{ secrets.DB_ENCRYPT }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }} 